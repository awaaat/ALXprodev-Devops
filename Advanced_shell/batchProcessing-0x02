#!/bin/bash
# ---------------------------------------------------------
# Script: batchProcessing-0x02
# Purpose: Fetch data for a list of Pokémon with retry logic
# Requirements: Retry failed requests up to 3 times and log errors
# ---------------------------------------------------------

# Create a folder to hold the downloaded data
mkdir -p pokemon_data

# Define Pokémon list exactly as required
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Define a function to fetch data with retries
fetch_pokemon_data() {
    local pokemon=$1
    local retries=3
    local count=0
    local success=0

    while [ $count -lt $retries ]; do
        echo "Fetching data for ${pokemon}... (Attempt $((count + 1)))"

        # Use curl to download the Pokémon's data silently
        curl -s "https://pokeapi.co/api/v2/pokemon/${pokemon}" > "pokemon_data/${pokemon}.json"

        # Check if it was successful and file is not empty
        if [ $? -eq 0 ] && [ -s "pokemon_data/${pokemon}.json" ]; then
            echo " Saved data to pokemon_data/${pokemon}.json"
            success=1
            break
        fi

        # If failed, wait 2 seconds before trying again
        count=$((count + 1))
        echo "⚠️  Attempt $count failed for $pokemon. Retrying in 2s..."
        sleep 2
    done

    # If all retries failed, log the error
    if [ $success -eq 0 ]; then
        echo "$(date): ❌ Failed to fetch data for ${pokemon} after $retries attempts" >> errors.txt
    fi
}

# Loop through the Pokémon list
for pokemon in "${pokemon_list[@]}"; do
    fetch_pokemon_data "$pokemon"
    sleep 2  # short delay between each Pokémon to avoid API rate limiting
done

echo ""
echo "✅ Finished. Check 'pokemon_data/' folder and 'errors.txt' (if any errors)."
