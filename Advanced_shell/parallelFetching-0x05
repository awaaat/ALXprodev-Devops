#!/bin/bash
# ------------------------------------------------------------------
# Script: parallelFetching-0x05
# Purpose: Fetch Pokémon data in parallel using background processes
# Tools used: curl, &, wait, mkdir, echo
# ------------------------------------------------------------------

# Step 1: Create a folder for data (if not exists)
mkdir -p pokemon_data

# Step 2: Define the Pokémon list
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Step 3: Function to fetch a single Pokémon’s data
fetch_pokemon() {
    local pokemon=$1
    echo "Fetching $pokemon..."

    curl -s "https://pokeapi.co/api/v2/pokemon/${pokemon}" > "pokemon_data/${pokemon}.json"

    if [ $? -eq 0 ] && [ -s "pokemon_data/${pokemon}.json" ]; then
        echo "$pokemon saved to pokemon_data/${pokemon}.json"
    else
        echo "$(date):Failed to fetch $pokemon" >> errors_parallel.txt
        echo "$pokemon fetch failed"
    fi
}

# Step 4: Loop through Pokémon list and fetch them in background
for pokemon in "${pokemon_list[@]}"; do
    fetch_pokemon "$pokemon" &  # Run the function in the background using &
done

# Step 5: Wait for all background jobs to complete before continuing
wait  # This command blocks until all parallel background jobs finish

# Step 6: Done message
echo "All fetch operations completed!"
